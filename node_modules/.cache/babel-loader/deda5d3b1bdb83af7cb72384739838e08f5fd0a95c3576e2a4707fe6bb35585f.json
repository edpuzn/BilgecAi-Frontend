{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      query: '',\n      messages: [] // Kullanıcı ve AI mesajlarını tutmak için bir dizi\n    };\n  },\n  methods: {\n    async performSearch() {\n      if (this.query.trim() === '') {\n        return; // Boş bir sorgu göndermeyelim\n      }\n\n      // Kullanıcının sorusunu sohbet geçmişine ekle\n      this.messages.push({\n        sender: 'user',\n        text: this.query\n      });\n      try {\n        // Backend'e POST isteği gönder\n        const response = await axios.post('http://localhost:8080/api/search', {\n          query: this.query\n        });\n\n        // Dönen yanıtı kontrol ediyoruz\n        if (response && response.data && Array.isArray(response.data)) {\n          const aiResponse = response.data[0]; // AI'dan gelen ilk yanıt\n          console.log(\"Backend yanıtı:\", aiResponse);\n\n          // AI'nın yanıtını sohbet geçmişine ekle\n          this.messages.push({\n            sender: 'ai',\n            text: aiResponse\n          });\n        } else {\n          console.warn(\"Yanıt formatı beklenildiği gibi değil:\", response);\n        }\n\n        // Sorguyu temizle\n        this.query = '';\n      } catch (error) {\n        console.error('Hata oluştu:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","query","messages","methods","performSearch","trim","push","sender","text","response","post","Array","isArray","aiResponse","console","log","warn","error"],"sources":["/Users/ed1p_/Desktop/HackAthon/frontend/src/components/SearchComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Gemini Arama</h1>\n    <input v-model=\"query\" type=\"text\" placeholder=\"Aramak istediğin şeyi yaz...\" />\n    <button @click=\"performSearch\">Ara</button>\n\n    <div v-if=\"messages.length\">\n      <h3>Sohbet Geçmişi:</h3>\n      <div class=\"chat-history\">\n        <div v-for=\"(message, index) in messages\" :key=\"index\" :class=\"message.sender\">\n          <strong v-if=\"message.sender === 'user'\">Kullanıcı:</strong>\n          <strong v-if=\"message.sender === 'ai'\">AI:</strong>\n          <span>{{ message.text }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      query: '',\n      messages: [], // Kullanıcı ve AI mesajlarını tutmak için bir dizi\n    };\n  },\n  methods: {\n    async performSearch() {\n      if (this.query.trim() === '') {\n        return; // Boş bir sorgu göndermeyelim\n      }\n\n      // Kullanıcının sorusunu sohbet geçmişine ekle\n      this.messages.push({ sender: 'user', text: this.query });\n\n      try {\n        // Backend'e POST isteği gönder\n        const response = await axios.post('http://localhost:8080/api/search', {\n          query: this.query,\n        });\n\n        // Dönen yanıtı kontrol ediyoruz\n        if (response && response.data && Array.isArray(response.data)) {\n          const aiResponse = response.data[0]; // AI'dan gelen ilk yanıt\n          console.log(\"Backend yanıtı:\", aiResponse);\n\n          // AI'nın yanıtını sohbet geçmişine ekle\n          this.messages.push({ sender: 'ai', text: aiResponse });\n        } else {\n          console.warn(\"Yanıt formatı beklenildiği gibi değil:\", response);\n        }\n\n        // Sorguyu temizle\n        this.query = '';\n      } catch (error) {\n        console.error('Hata oluştu:', error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Basit stil ayarları */\nh1 {\n  color: #2c3e50;\n}\n\ninput {\n  margin-right: 10px;\n}\n\nbutton {\n  margin-bottom: 10px;\n}\n\n.chat-history {\n  margin-top: 20px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  max-height: 400px;\n  overflow-y: auto;\n}\n\n.user {\n  color: #2c3e50;\n  margin-bottom: 5px;\n}\n\n.ai {\n  color: #3498db;\n  margin-bottom: 5px;\n}\n</style>\n"],"mappings":";AAoBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC,MAAM,EAAE,EAAE;QAC5B,OAAM,CAAE;MACV;;MAEA;MACA,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC;QAAEC,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAE,IAAI,CAACP;MAAM,CAAC,CAAC;MAExD,IAAI;QACF;QACA,MAAMQ,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,kCAAkC,EAAE;UACpET,KAAK,EAAE,IAAI,CAACA;QACd,CAAC,CAAC;;QAEF;QACA,IAAIQ,QAAO,IAAKA,QAAQ,CAACT,IAAG,IAAKW,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACT,IAAI,CAAC,EAAE;UAC7D,MAAMa,UAAS,GAAIJ,QAAQ,CAACT,IAAI,CAAC,CAAC,CAAC,EAAE;UACrCc,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,UAAU,CAAC;;UAE1C;UACA,IAAI,CAACX,QAAQ,CAACI,IAAI,CAAC;YAAEC,MAAM,EAAE,IAAI;YAAEC,IAAI,EAAEK;UAAW,CAAC,CAAC;QACxD,OAAO;UACLC,OAAO,CAACE,IAAI,CAAC,wCAAwC,EAAEP,QAAQ,CAAC;QAClE;;QAEA;QACA,IAAI,CAACR,KAAI,GAAI,EAAE;MACjB,EAAE,OAAOgB,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}