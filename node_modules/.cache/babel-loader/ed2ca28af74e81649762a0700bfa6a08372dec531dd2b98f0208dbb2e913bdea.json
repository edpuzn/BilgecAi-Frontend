{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { marked } from 'marked';\nexport default {\n  data() {\n    return {\n      query: '',\n      messages: [] // Kullanıcı ve AI mesajlarını tutmak için bir dizi\n    };\n  },\n  methods: {\n    async performSearch() {\n      if (this.query.trim() === '') {\n        return; // Boş bir sorgu göndermeyelim\n      }\n\n      // Kullanıcının sorusunu sohbet geçmişine ekle\n      this.messages.push({\n        sender: 'user',\n        text: this.query\n      });\n      try {\n        // Backend'e POST isteği gönder\n        const response = await axios.post('http://localhost:8080/api/search', {\n          query: this.query\n        });\n\n        // Dönen yanıtı kontrol ediyoruz\n        if (response && response.data && Array.isArray(response.data)) {\n          const aiResponse = response.data[0]; // AI'dan gelen ilk yanıt\n          console.log(\"Backend yanıtı:\", aiResponse);\n\n          // AI'nın yanıtını zenginleştirilmiş şekilde sohbet geçmişine ekle\n          this.messages.push({\n            sender: 'ai',\n            text: aiResponse.text || aiResponse,\n            // Text alanı ya da string yanıt ekle\n            images: aiResponse.images || [] // Görsel verilerini ekle\n          });\n        } else {\n          console.warn(\"Yanıt formatı beklenildiği gibi değil:\", response);\n        }\n\n        // Sorguyu temizle\n        this.query = '';\n      } catch (error) {\n        console.error('Hata oluştu:', error);\n      }\n    },\n    formatMessage(text) {\n      if (!text) {\n        return ''; // Eğer text `null` veya `undefined` ise boş bir string döndür\n      }\n      return marked(text); // Markdown formatında dönüştür\n    },\n    addSuggestionToMessages(suggestion) {\n      // Default öneri mesajını sohbet geçmişine ekle\n      this.messages.push(suggestion);\n    }\n  }\n};","map":{"version":3,"names":["axios","marked","data","query","messages","methods","performSearch","trim","push","sender","text","response","post","Array","isArray","aiResponse","console","log","images","warn","error","formatMessage","addSuggestionToMessages","suggestion"],"sources":["/Users/ed1p_/Desktop/HackAthon/frontend/src/components/SearchComponent.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <div class=\"header\">\n      <h1>BilgeBot</h1>\n    </div>\n    <div class=\"chat-box\">\n      <div class=\"chat-history\">\n        <div v-for=\"(message, index) in messages\" :key=\"index\" :class=\"['message', message.sender]\">\n          <div class=\"message-content\" v-html=\"formatMessage(message.text)\"></div>\n\n          <div v-if=\"message.images && message.images.length\" class=\"images\">\n            <div v-for=\"(image, imgIndex) in message.images\" :key=\"imgIndex\" class=\"image-container\">\n              <img :src=\"image.url\" :alt=\"image.alt\" class=\"message-image\" />\n              <p class=\"image-caption\">{{ image.alt }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"input-area\">\n      <input v-model=\"query\" type=\"text\" placeholder=\"Aramak istediğin şeyi yaz...\" @keyup.enter=\"performSearch\" />\n      <button @click=\"performSearch\" class=\"search-button\">Ara</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { marked } from 'marked';\n\nexport default {\n  data() {\n    return {\n      query: '',\n      messages: [], // Kullanıcı ve AI mesajlarını tutmak için bir dizi\n    };\n  },\n  methods: {\n    async performSearch() {\n      if (this.query.trim() === '') {\n        return; // Boş bir sorgu göndermeyelim\n      }\n\n      // Kullanıcının sorusunu sohbet geçmişine ekle\n      this.messages.push({ sender: 'user', text: this.query });\n\n      try {\n        // Backend'e POST isteği gönder\n        const response = await axios.post('http://localhost:8080/api/search', {\n          query: this.query,\n        });\n\n        // Dönen yanıtı kontrol ediyoruz\n        if (response && response.data && Array.isArray(response.data)) {\n          const aiResponse = response.data[0]; // AI'dan gelen ilk yanıt\n          console.log(\"Backend yanıtı:\", aiResponse);\n\n          // AI'nın yanıtını zenginleştirilmiş şekilde sohbet geçmişine ekle\n          this.messages.push({\n            sender: 'ai',\n            text: aiResponse.text || aiResponse, // Text alanı ya da string yanıt ekle\n            images: aiResponse.images || [] // Görsel verilerini ekle\n          });\n        } else {\n          console.warn(\"Yanıt formatı beklenildiği gibi değil:\", response);\n        }\n\n        // Sorguyu temizle\n        this.query = '';\n      } catch (error) {\n        console.error('Hata oluştu:', error);\n      }\n    },\n    formatMessage(text) {\n      if (!text) {\n        return ''; // Eğer text `null` veya `undefined` ise boş bir string döndür\n      }\n      return marked(text); // Markdown formatında dönüştür\n    },\n    addSuggestionToMessages(suggestion) {\n      // Default öneri mesajını sohbet geçmişine ekle\n      this.messages.push(suggestion);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Stil ayarları burada olabilir */\n</style>\n"],"mappings":";AA2BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAK,QAAS,QAAQ;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC,MAAM,EAAE,EAAE;QAC5B,OAAM,CAAE;MACV;;MAEA;MACA,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC;QAAEC,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAE,IAAI,CAACP;MAAM,CAAC,CAAC;MAExD,IAAI;QACF;QACA,MAAMQ,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,kCAAkC,EAAE;UACpET,KAAK,EAAE,IAAI,CAACA;QACd,CAAC,CAAC;;QAEF;QACA,IAAIQ,QAAO,IAAKA,QAAQ,CAACT,IAAG,IAAKW,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACT,IAAI,CAAC,EAAE;UAC7D,MAAMa,UAAS,GAAIJ,QAAQ,CAACT,IAAI,CAAC,CAAC,CAAC,EAAE;UACrCc,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,UAAU,CAAC;;UAE1C;UACA,IAAI,CAACX,QAAQ,CAACI,IAAI,CAAC;YACjBC,MAAM,EAAE,IAAI;YACZC,IAAI,EAAEK,UAAU,CAACL,IAAG,IAAKK,UAAU;YAAE;YACrCG,MAAM,EAAEH,UAAU,CAACG,MAAK,IAAK,EAAC,CAAE;UAClC,CAAC,CAAC;QACJ,OAAO;UACLF,OAAO,CAACG,IAAI,CAAC,wCAAwC,EAAER,QAAQ,CAAC;QAClE;;QAEA;QACA,IAAI,CAACR,KAAI,GAAI,EAAE;MACjB,EAAE,OAAOiB,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACtC;IACF,CAAC;IACDC,aAAaA,CAACX,IAAI,EAAE;MAClB,IAAI,CAACA,IAAI,EAAE;QACT,OAAO,EAAE,EAAE;MACb;MACA,OAAOT,MAAM,CAACS,IAAI,CAAC,EAAE;IACvB,CAAC;IACDY,uBAAuBA,CAACC,UAAU,EAAE;MAClC;MACA,IAAI,CAACnB,QAAQ,CAACI,IAAI,CAACe,UAAU,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}