{"ast":null,"code":"import api from '../api';\nexport default {\n  data() {\n    return {\n      query: '',\n      results: []\n    };\n  },\n  methods: {\n    async performSearch() {\n      try {\n        // Backend'e istek gönder\n        const response = await api.search(this.query);\n\n        // Backend'ten dönen yanıtı işleyelim\n        if (response && response.data && response.data.results) {\n          console.log(\"Backend yanıtı:\", response.data.results); // Yanıtı konsola yazdır\n          this.results = response.data.results; // JSON yanıtında \"results\" varsa onu kullan\n        } else {\n          console.warn(\"Yanıt formatı beklenildiği gibi değil:\", response);\n          this.results = []; // Eğer yanıt yoksa boş bırak\n        }\n      } catch (error) {\n        console.error('Hata oluştu:', error);\n        this.results = []; // Hata durumunda boş dizi ayarla ki frontend bu durumda bozulmasın\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","data","query","results","methods","performSearch","response","search","console","log","warn","error"],"sources":["/Users/ed1p_/Desktop/HackAthon/frontend/src/components/SearchComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Gemini Arama</h1>\n    <input v-model=\"query\" type=\"text\" placeholder=\"Aramak istediğin şeyi yaz...\"/>\n    <button @click=\"performSearch\">Ara</button>\n    <div v-if=\"results && results.length\">\n      <h3>Sonuçlar:</h3>\n      <ul>\n        <li v-for=\"(result, index) in results\" :key=\"index\">{{ result }}</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '../api';\n\nexport default {\n  data() {\n    return {\n      query: '',\n      results: [],\n    };\n  },\n  methods: {\n    async performSearch() {\n      try {\n        // Backend'e istek gönder\n        const response = await api.search(this.query);\n\n        // Backend'ten dönen yanıtı işleyelim\n        if (response && response.data && response.data.results) {\n          console.log(\"Backend yanıtı:\", response.data.results); // Yanıtı konsola yazdır\n          this.results = response.data.results; // JSON yanıtında \"results\" varsa onu kullan\n        } else {\n          console.warn(\"Yanıt formatı beklenildiği gibi değil:\", response);\n          this.results = []; // Eğer yanıt yoksa boş bırak\n        }\n      } catch (error) {\n        console.error('Hata oluştu:', error);\n        this.results = []; // Hata durumunda boş dizi ayarla ki frontend bu durumda bozulmasın\n      }\n    }\n  },\n  };\n</script>\n\n<style scoped>\n/* Basit stil ayarları */\nh1 {\n  color: #2c3e50;\n}\n\ninput {\n  margin-right: 10px;\n}\n</style>\n"],"mappings":"AAeA,OAAOA,GAAE,MAAO,QAAQ;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMN,GAAG,CAACO,MAAM,CAAC,IAAI,CAACL,KAAK,CAAC;;QAE7C;QACA,IAAII,QAAO,IAAKA,QAAQ,CAACL,IAAG,IAAKK,QAAQ,CAACL,IAAI,CAACE,OAAO,EAAE;UACtDK,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,QAAQ,CAACL,IAAI,CAACE,OAAO,CAAC,EAAE;UACvD,IAAI,CAACA,OAAM,GAAIG,QAAQ,CAACL,IAAI,CAACE,OAAO,EAAE;QACxC,OAAO;UACLK,OAAO,CAACE,IAAI,CAAC,wCAAwC,EAAEJ,QAAQ,CAAC;UAChE,IAAI,CAACH,OAAM,GAAI,EAAE,EAAE;QACrB;MACF,EAAE,OAAOQ,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC,IAAI,CAACR,OAAM,GAAI,EAAE,EAAE;MACrB;IACF;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}